name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main
      - dev
      - Test
      - release
  workflow_dispatch:  # Allows triggering the pipeline manually with a specific commit ID

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.commit_id || github.ref_name }}  # Use commit ID if provided, else the branch

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: |
          # Install Elastic Beanstalk CLI
          pip install awsebcli

          # Initialize Elastic Beanstalk
          eb init -p corretto-21 ${{ secrets.EB_APP_NAME }} --region ${{ secrets.AWS_REGION }}

          # For production deployment, add a tag and deploy
          if [[ ${{ github.ref_name }} == "prod" ]]; then
            NEW_TAG=$(git describe --tags --match "R2024-*" --abbrev=0 | awk -F. '{print $1"."$2+1}')
            git tag -a "${NEW_TAG}" -m "Release ${NEW_TAG}"
            git push origin "${NEW_TAG}"

            # Deploy to Elastic Beanstalk
            eb deploy --staged
          else
            # Deploy to Elastic Beanstalk for dev, uat, or release branches
            eb deploy --staged

  # Optionally create a tag when deploying to production
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy

    if: github.ref_name == 'prod'

    steps:
      - name: Create release tag
        run: |
          NEW_TAG=$(git describe --tags --match "R2024-*" --abbrev=0 | awk -F. '{print $1"."$2+1}')
          git tag -a "${NEW_TAG}" -m "Release ${NEW_TAG}"
          git push origin "${NEW_TAG}"
